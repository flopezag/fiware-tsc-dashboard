[
    {
        "enabler": "2D-UI",
        "catalogue": "2d-ui",
        "academy": "2D-UI",
        "readthedocs": "",
        "helpdesk": "2D-UI",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [],
        "docker": []
    },
    {
        "enabler": "2D/3D Capture",
        "catalogue": "2d3d-capture",
        "academy": "2D 3D capture GE",
        "readthedocs": "",
        "helpdesk": "2D-3D Capture",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "Cyberlightning/Cyber-WeX"
        ],
        "docker": []
    },
    {
        "enabler": "3D-UI-XML3D",
        "catalogue": "3d-ui-xml3d",
        "academy": "XML3D",
        "readthedocs": "xml3d",
        "helpdesk": "XML3D",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "xml3d/xml3d.js"
        ],
        "docker": []
    },
    {
        "enabler": "3DUI - WebTundra",
        "catalogue": "3dui-webtundra",
        "academy": "WebTundra",
        "readthedocs": "webtundra",
        "helpdesk": "Web Tundra 3D",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "realXtend/WebTundra"
        ],
        "docker": []
    },
    {
        "enabler": "AEON",
        "catalogue": "cloud-messaging-aeon",
        "academy": "AEON",
        "readthedocs": "aeon-platform",
        "helpdesk": "Aeon",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "atos-ari-aeon/fiware-cloud-messaging-dashboard",
            "atos-ari-aeon/fiware-cloud-messaging-api",
            "atos-ari-aeon/fiware-cloud-messaging-events-manager",
            "atos-ari-aeon/fiware-cloud-messaging-platform",
            "atos-ari-aeon/fiware-cloud-messaging-sdk"
        ],
        "docker": []
    },
    {
        "enabler": "APInf",
        "catalogue": "",
        "academy": "",
        "readthedocs": "",
        "helpdesk": "APInf",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "apinf/apinf-umbrella",
            "apinf/platform"
        ],
        "docker": [
            "apinf/platform"
        ]
    },
    {
        "enabler": "Augmented Reality",
        "catalogue": "augmented-reality",
        "academy": "Augmented Reality",
        "readthedocs": "fiware-augmentedreality",
        "helpdesk": "Augmented Reality",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "Chiru/FIWARE-AugmentedReality"
        ],
        "docker": []
    },
    {
        "enabler": "AuthZForce",
        "catalogue": "authorization-pdp-authzforce",
        "academy": "Auth(Z|z)(F|f)orce",
        "readthedocs": "authzforce-ce-fiware",
        "helpdesk": "AuthZForce",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "authzforce/server"
        ],
        "docker": [
            "fiware/authzforce-ce-server"
        ]
    },
    {
        "enabler": "Bosun - Policy Manager",
        "catalogue": "policy-manager-bosun",
        "academy": "Policy Manager GE",
        "readthedocs": "fiware-cloto",
        "helpdesk": "Bosun",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "coverll": "telefonicaid/fiware-facts",
        "github": [
            "telefonicaid/fiware-facts",
            "telefonicaid/fiware-cloto"
        ],
        "docker": [
            "fiware/bosun-cloto",
            "fiware/bosun-facts"
        ]
    },
    {
        "enabler": "Business API Ecosystem",
        "catalogue": "business-api-ecosystem-biz-ecosystem-ri",
        "academy": "Business API Ecosystem",
        "readthedocs": "business-api-ecosystem",
        "helpdesk": "Business Ecosystem",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "FIWARE-TMForum/DSBILLINGMANAGEMENT",
            "FIWARE-TMForum/Business-API-Ecosystem",
            "FIWARE-TMForum/business-ecosystem-charging-backend",
            "FIWARE-TMForum/DSCUSTOMER",
            "FIWARE-TMForum/business-ecosystem-logic-proxy",
            "FIWARE-TMForum/DSPRODUCTORDERING",
            "FIWARE-TMForum/DSPARTYMANAGEMENT",
            "FIWARE-TMForum/DSPRODUCTCATALOG2",
            "FIWARE-TMForum/DSPRODUCTINVENTORY",
            "FIWARE-TMForum/business-ecosystem-rss",
            "FIWARE-TMForum/DSUSAGEMANAGEMENT"
        ],
        "docker": [
            "fiware/business-api-ecosystem",
            "conwetlab/biz-ecosystem-charging-backend",
            "conwetlab/biz-ecosystem-logic-proxy",
            "conwetlab/biz-ecosystem-rss"
        ]
    },
    {
        "enabler": "Cepheus",
        "catalogue": "iot-data-edge-consolidation-ge-cepheus",
        "academy": "",
        "readthedocs": "fiware-cepheus",
        "helpdesk": "Cepheus",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "coverll": "Orange-OpenSource/fiware-cepheus",
        "github": [
            "Orange-OpenSource/fiware-cepheus"
        ],
        "docker": [
            "orangeopensource/fiware-cepheus-cep",
            "orangeopensource/fiware-cepheus-broker"
        ]
    },
    {
        "enabler": "Cloud Portal",
        "catalogue": "self-service-interfaces-cloud-portal",
        "academy": "Cloud Portal",
        "readthedocs": "fiware-cloud-portal",
        "helpdesk": "Cloud Portal",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "ging/fiware-cloud-portal"
        ],
        "docker": [
            "fiware/cloud-portal"
        ]
    },
    {
        "enabler": "Cloud Rendering",
        "catalogue": "cloud-rendering",
        "academy": "Cloud Rendering",
        "readthedocs": "cloud-renderer",
        "helpdesk": "Cloud Render",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "tospie/fiware-cloud-rendering-service"
        ],
        "docker": []
    },
    {
        "enabler": "Comet - Short Time Historic",
        "catalogue": "sth-comet",
        "academy": "",
        "readthedocs": "fiware-sth-comet",
        "helpdesk": "STH-Comet",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "telefonicaid/fiware-sth-comet"
        ],
        "docker": [
            "fiware/sth-comet"
        ]
    },
    {
        "enabler": "Cosmos",
        "catalogue": "",
        "academy": "",
        "readthedocs": "fiware-cosmos-flink",
        "helpdesk": "Cosmos",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "ging/fiware-cosmos-orion-flink-connector",
            "ging/fiware-cosmos-orion-flink-connector-examples",
            "ging/fiware-cosmos-orion-spark-connector",
            "ging/fiware-cosmos-orion-spark-connector-examples"
        ],
        "docker": []
    },
    {
        "enabler": "Cosmos - BigData Analysis",
        "catalogue": "bigdata-analysis-cosmos",
        "academy": "Cosmos",
        "readthedocs": "fiware-cosmos",
        "helpdesk": "Cosmos",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "telefonicaid/fiware-cosmos",
            "telefonicaid/fiware-sinfonier"
        ],
        "docker": []
    },
    {
        "enabler": "CyberCAPTOR",
        "catalogue": "cyber-security-ge-cybercaptor",
        "academy": "Cyber seCurity",
        "readthedocs": "cybercaptor",
        "helpdesk": "Cyber Security",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [],
        "docker": [
            "fiware/cybercaptor-client",
            "fiware/cybercaptor-cp2ds-peer",
            "fiware/cybercaptor-p2ds-mgr",
            "fiware/cybercaptor-server"
        ]
    },
    {
        "enabler": "Cygnus",
        "catalogue": "cygnus",
        "academy": "",
        "readthedocs": "fiware-cygnus",
        "helpdesk": "Cygnus",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "telefonicaid/fiware-cygnus"
        ],
        "docker": [
            "fiware/cygnus-ngsi"
        ]
    },
    {
        "enabler": "Docker",
        "catalogue": "docker",
        "academy": "Docker",
        "readthedocs": "",
        "helpdesk": "Docker",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [],
        "docker": []
    },
    {
        "enabler": "Domibus",
        "catalogue": "electronic-data-exchange-domibus",
        "academy": "Electronic Data Exchange",
        "readthedocs": "",
        "helpdesk": "Domibus",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "ec.europa.eu"
        ],
        "docker": [
            "fiware/domibus-tomcat"
        ]
    },
    {
        "enabler": "Draco",
        "catalogue": "",
        "academy": "",
        "readthedocs": "fiware-draco",
        "helpdesk": "Draco",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "ging/fiware-draco"
        ],
        "docker": [
            "ging/fiware-draco"
        ]
    },
    {
        "enabler": "FIWARE's Extended CKAN",
        "catalogue": "fiware-ckan-extensions",
        "academy": "CKAN",
        "readthedocs": "fiware-ckan-extensions",
        "helpdesk": "CKAN",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "FIWARE-TMForum/ckanext-baepublisher",
            "conwetlab/FIWARE-CKAN-Extensions",
            "conwetlab/ckanext-datarequests",
            "conwetlab/ckanext-oauth2",
            "conwetlab/ckanext-privatedatasets",
            "conwetlab/ckanext-right_time_context",
            "conwetlab/ckanext-wirecloud_view"
        ],
        "docker": [
            "fiware/ckan-extended"
        ]
    },
    {
        "enabler": "Fast-RTPS",
        "catalogue": "fast-rtps",
        "academy": "",
        "readthedocs": "eprosima-fast-rtps",
        "helpdesk": "FastRTPS",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "eProsima/Fast-RTPS"
        ],
        "docker": []
    },
    {
        "enabler": "FiVES - Flexible Virtual Environment Server",
        "catalogue": "synchronization-fives",
        "academy": "FiVES",
        "readthedocs": "fives",
        "helpdesk": "Fives",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "fives-team/FiVES"
        ],
        "docker": [
            "tospie/fives"
        ]
    },
    {
        "enabler": "FogFlow",
        "catalogue": "fogflow",
        "academy": "",
        "readthedocs": "fogflow",
        "helpdesk": "FogFlow",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "smartfog/fogflow"
        ],
        "docker": [
            "fogflow/designer",
            "fogflow/worker",
            "fogflow/master",
            "fogflow/broker",
            "fogflow/discovery",
            "fogflow/sum",
            "fogflow/facecounter",
            "fogflow/facefinder",
            "fogflow/recommender",
            "fogflow/connectedcar",
            "fogflow/privatesite",
            "fogflow/publicsite",
            "fogflow/anomaly",
            "fogflow/counter",
            "fogflow/dummy",
            "fogflow/nodejs"
        ]
    },
    {
        "enabler": "GIS Data Provider ",
        "catalogue": "gis-data-provider-geoserver3d",
        "academy": "GIS",
        "readthedocs": "gisdataprovider",
        "helpdesk": "GIS Provider",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "Cyberlightning/geoserver",
            "Cyberlightning/GISDataProvider"
        ],
        "docker": [
            "fiware/gisdataprovider"
        ]
    },
    {
        "enabler": "IaaS GE",
        "catalogue": "iaas-ge-fiware-reference-implementation",
        "academy": "IaaS Resource Management",
        "readthedocs": "",
        "helpdesk": "IaaS RM",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [],
        "docker": []
    },
    {
        "enabler": "Idra",
        "catalogue": "",
        "academy": "",
        "readthedocs": "idra",
        "helpdesk": "IDRA",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "OPSILab/Idra"
        ],
        "docker": [
            "idraopendata/idra"
        ]
    },
    {
        "enabler": "Interface Designer",
        "catalogue": "interface-designer",
        "academy": "Interface Designer",
        "readthedocs": "interface-designer",
        "helpdesk": "UI Designer",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "Adminotech/fiware-interface-designer"
        ],
        "docker": []
    },
    {
        "enabler": "IoT Agent Node.JS Library",
        "catalogue": "",
        "academy": "",
        "readthedocs": "iotagent-node-lib",
        "helpdesk": "IDAS",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "telefonicaid/iotagent-node-lib"
        ],
        "docker": []
    },
    {
        "enabler": "IoT Agent for JSON",
        "catalogue": "",
        "academy": "IDAS",
        "readthedocs": "fiware-iotagent-json",
        "helpdesk": "IDAS",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "telefonicaid/iotagent-json"
        ],
        "docker": [
            "fiware/iotagent-json"
        ]
    },
    {
        "enabler": "IoT Agent for Lightweight M2M",
        "catalogue": "",
        "academy": "IDAS",
        "readthedocs": "fiware-iotagent-lwm2m",
        "helpdesk": "IDAS",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "telefonicaid/lightweightm2m-iotagent"
        ],
        "docker": [
            "fiware/lightweightm2m-iotagent"
        ]
    },
    {
        "enabler": "IoT Agent for LoRaWan",
        "catalogue": "",
        "academy": "",
        "readthedocs": "fiware-lorawan",
        "helpdesk": "IDAS",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "Atos-Research-and-Innovation/IoTagent-LoRaWAN"
        ],
        "docker": [
            "fiware/iotagent-lorawan"
        ]
    },
    {
        "enabler": "IoT Agent for OPC UA",
        "catalogue": "",
        "academy": "",
        "readthedocs": "iotagent-opcua",
        "helpdesk": "IDAS",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "Engineering-Research-and-Development/iotagent-opcua"
        ],
        "docker": [
            "rdlabengpa/opcuaage"
        ]
    },
    {
        "enabler": "IoT Agent for SigFox",
        "catalogue": "",
        "academy": "IDAS",
        "readthedocs": "iotagent-sigfox",
        "helpdesk": "IDAS",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "telefonicaid/sigfox-iotagent"
        ],
        "docker": [
            "fiware/sigfox-iotagent"
        ]
    },
    {
        "enabler": "IoT Agent for Ultralight",
        "catalogue": "",
        "academy": "IDAS",
        "readthedocs": "fiware-iotagent-ul",
        "helpdesk": "IDAS",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "telefonicaid/iotagent-ul"
        ],
        "docker": [
            "fiware/iotagent-ul"
        ]
    },
    {
        "enabler": "IoT Broker",
        "catalogue": "iot-broker",
        "academy": "IoT Broker",
        "readthedocs": "fiware-iot-broker",
        "helpdesk": "IoT Broker",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "Aeronbroker/Aeron",
            "Aeronbroker/NEConfMan"
        ],
        "docker": [
            "fiware/iotbroker"
        ]
    },
    {
        "enabler": "IoT Discovery",
        "catalogue": "iot-discovery",
        "academy": "IoT Discovery",
        "readthedocs": "fiware-iot-discovery-ngsi9",
        "helpdesk": "IoT Discovery",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "UniSurreyIoT/fiware-iot-discovery-s2w",
            "UniSurreyIoT/fiware-iot-discovery-ngsi9"
        ],
        "docker": [
            "fiware/fiware-iot-discovery-ngsi9"
        ]
    },
    {
        "enabler": "Keyrock - Identity Manager",
        "catalogue": "identity-management-keyrock",
        "academy": "KeyRock",
        "readthedocs": "fiware-idm",
        "helpdesk": "KeyRock",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "ging/fiware-idm"
        ],
        "docker": [
            "fiware/idm"
        ]
    },
    {
        "enabler": "Kiara",
        "catalogue": "kiara-advanced-middleware",
        "academy": "KIARA Advanced Middleware",
        "readthedocs": "",
        "helpdesk": "Kiara",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "FIWARE-Middleware/KIARA"
        ],
        "docker": []
    },
    {
        "enabler": "Knowage",
        "catalogue": "data-visualization-knowage",
        "academy": "",
        "readthedocs": "knowage",
        "helpdesk": "Knowage",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "KnowageLabs/Knowage-Documentation",
            "KnowageLabs/Knowage-Server",
            "KnowageLabs/Knowage-Server-Chef",
            "KnowageLabs/Knowage-Server-Docker"
        ],
        "docker": [
            "knowagelabs/knowage-server-docker"
        ]
    },
    {
        "enabler": "Kurento",
        "catalogue": "kurento",
        "academy": "Kurento",
        "readthedocs": "doc-kurento",
        "helpdesk": "Kurento",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "Kurento/doc-fiware-readthedocs",
            "Kurento/kurento-media-server",
            "Kurento/kurento-docker"
        ],
        "docker": [
            "fiware/stream-oriented-kurento"
        ]
    },
    {
        "enabler": "MR CoAP - Protocol Adapter",
        "catalogue": "protocol-adapter-mr-coap",
        "academy": "Protocol Adapter",
        "readthedocs": "",
        "helpdesk": "",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [],
        "docker": []
    },
    {
        "enabler": "Micro-XRCE-DDS",
        "catalogue": "fast-rtps",
        "academy": "",
        "readthedocs": "",
        "helpdesk": "Micro-XRCE-DDS",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "eProsima/Micro-XRCE-DDS"
        ],
        "docker": []
    },
    {
        "enabler": "Murano",
        "catalogue": "application-management-murano",
        "academy": "Murano",
        "readthedocs": "murano",
        "helpdesk": "Murano",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [],
        "docker": [
            "fiware/murano"
        ]
    },
    {
        "enabler": "OFNIC - Network Information & Control",
        "catalogue": "network-information-and-control-ofnic",
        "academy": "OFNIC",
        "readthedocs": "fiware-ofnic",
        "helpdesk": "OFNIC",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "FIWARE-UNIROMA1/FIWARE-OFNIC"
        ],
        "docker": [
            "fiware/ofnic"
        ]
    },
    {
        "enabler": "Object Storage",
        "catalogue": "object-storage-ge-fiware-implementation",
        "academy": "Object Storage",
        "readthedocs": "",
        "helpdesk": "Object Storage",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "coverll": "renarsvilnis/fiware-object-storage-ge",
        "github": [
            "renarsvilnis/fiware-object-storage-ge"
        ],
        "docker": []
    },
    {
        "enabler": "OpenMTC - oneM2M",
        "catalogue": "openmtc",
        "academy": "",
        "readthedocs": "fiware-openmtc",
        "helpdesk": "OpenMTC",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "OpenMTC/OpenMTC"
        ],
        "docker": [
            "openmtc/influxdb-app-arm",
            "openmtc/influxdb-app-amd64",
            "openmtc/cul868-ipe-arm",
            "openmtc/cul868-ipe-amd64",
            "openmtc/orion-context-broker-app-arm",
            "openmtc/orion-context-broker-app-amd64",
            "openmtc/gateway-arm",
            "openmtc/gateway-amd64",
            "openmtc/backend-arm",
            "openmtc/backend-amd64",
            "openmtc/mqtt-connector-app-arm",
            "openmtc/mqtt-connector-app-amd64",
            "openmtc/csv-injector-app-arm",
            "openmtc/csv-injector-app-amd64"
        ]
    },
    {
        "enabler": "Orion - Context Broker",
        "catalogue": "orion-context-broker",
        "academy": "Orion Context Broker",
        "readthedocs": "fiware-orion",
        "helpdesk": "Orion",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "telefonicaid/fiware-orion"
        ],
        "docker": [
            "fiware/orion"
        ]
    },
    {
        "enabler": "POI Data Provider",
        "catalogue": "poi-data-provider",
        "academy": "POI Data Provider",
        "readthedocs": "fiware-poidataprovider",
        "helpdesk": "POI Provider",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "Chiru/FIWARE-POIDataProvider"
        ],
        "docker": []
    },
    {
        "enabler": "Pegasus - PaaS Manager",
        "catalogue": "paas-manager-pegasus",
        "academy": "Pegasus",
        "readthedocs": "fiware-paas",
        "helpdesk": "Pegasus",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "coverll": "telefonicaid/fiware-paas",
        "github": [
            "telefonicaid/fiware-paas"
        ],
        "docker": []
    },
    {
        "enabler": "Perseo",
        "catalogue": "kurento",
        "academy": "",
        "readthedocs": "",
        "helpdesk": "Perseo",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "telefonicaid/perseo-core",
            "telefonicaid/perseo-fe"
        ],
        "docker": []
    },
    {
        "enabler": "Privacy",
        "catalogue": "privacy",
        "academy": "Privacy",
        "readthedocs": "",
        "helpdesk": "Privacy",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [],
        "docker": []
    },
    {
        "enabler": "Proton - Complex Event Processing",
        "catalogue": "complex-event-processing-cep-proactive-technology-online",
        "academy": "Complex Event Processing",
        "readthedocs": "proactive-technology-online",
        "helpdesk": "CEP",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "ishkin/Proton"
        ],
        "docker": [
            "fiware/proactivetechnologyonline"
        ]
    },
    {
        "enabler": "QuantumLeap",
        "catalogue": "",
        "academy": "",
        "readthedocs": "quantumleap",
        "helpdesk": "Quantum-Leap",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "smartsdk/ngsi-timeseries-api"
        ],
        "docker": [
            "smartsdk/quantumleap"
        ]
    },
    {
        "enabler": "RSS-RI - Revenue Settlement and Sharing System",
        "catalogue": "revenue-settlement-and-sharing-system-rss-ri",
        "academy": "Revenue Settlement and Sharing System",
        "readthedocs": "fiware-rss",
        "helpdesk": "Revenue",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "conwetlab/fiware-rss"
        ],
        "docker": [
            "fiware/rss"
        ]
    },
    {
        "enabler": "Real Virtual Interaction",
        "catalogue": "real-virtual-interaction",
        "academy": "Real Virtual Interaction",
        "readthedocs": "realvirtualinteraction",
        "helpdesk": "Real Virtual Interaction",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "Cyberlightning/RealVirtualInteraction"
        ],
        "docker": [
            "fiware/realvirtualinteraction"
        ]
    },
    {
        "enabler": "Repository-RI",
        "catalogue": "repository-repository-ri",
        "academy": "Repository RI",
        "readthedocs": "repository-ri",
        "helpdesk": "Repository",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "conwetlab/Repository-RI"
        ],
        "docker": [
            "fiware/repository-ri"
        ]
    },
    {
        "enabler": "Sagitta - Software Deployment and Configuration Manager",
        "catalogue": "software-deployment-configuration-sagitta",
        "academy": "Sagitta",
        "readthedocs": "fiware-sdc",
        "helpdesk": "Sagitta",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "coverll": "telefonicaid/fiware-sdc",
        "github": [
            "telefonicaid/fiware-sdc"
        ],
        "docker": []
    },
    {
        "enabler": "Security Monitoring",
        "catalogue": "security-monitoring",
        "academy": "Security Monitoring",
        "readthedocs": "",
        "helpdesk": "",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [],
        "docker": []
    },
    {
        "enabler": "Sextant - Monitoring",
        "catalogue": "monitoring-ge-sextant",
        "academy": "Monitoring GE",
        "readthedocs": "",
        "helpdesk": "Monitoring",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "coverll": "telefonicaid/fiware-monitoring",
        "github": [
            "telefonicaid/fiware-monitoring"
        ],
        "docker": []
    },
    {
        "enabler": "SpagoBI",
        "catalogue": "data-visualization-spagobi",
        "academy": "SpagoBI",
        "readthedocs": "spagobi",
        "helpdesk": "SpagoBI",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "SpagoBILabs/SpagoBI"
        ],
        "docker": [
            "fiware/spagobi"
        ]
    },
    {
        "enabler": "Synchronization",
        "catalogue": "synchronization",
        "academy": "Synchronization GE",
        "readthedocs": "synchronization-tundra-urho3d",
        "helpdesk": "Synch - Tundra",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [],
        "docker": []
    },
    {
        "enabler": "Trustworthy Factory",
        "catalogue": "trustworthy-factory",
        "academy": "Tr(us|su)tworthy Factory",
        "readthedocs": "factory",
        "helpdesk": "Trust",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [],
        "docker": []
    },
    {
        "enabler": "Virtual Characters",
        "catalogue": "virtual-characters",
        "academy": "Virtual Characters",
        "readthedocs": "",
        "helpdesk": "Web Tundra Avatar",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "realXtend/WebTundra"
        ],
        "docker": []
    },
    {
        "enabler": "WMarket - Marketplace",
        "catalogue": "marketplace-wmarket",
        "academy": "WMarket",
        "readthedocs": "wmarket",
        "helpdesk": "Marketplace",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "conwetlab/WMarket"
        ],
        "docker": [
            "fiware/wmarket"
        ]
    },
    {
        "enabler": "WStore",
        "catalogue": "store-wstore",
        "academy": "WStore",
        "readthedocs": "wstore",
        "helpdesk": "WStore",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "conwetlab/wstore"
        ],
        "docker": [
            "fiware/wstore"
        ]
    },
    {
        "enabler": "Wilma - PEP Proxy",
        "catalogue": "pep-proxy-wilma",
        "academy": "Wilma",
        "readthedocs": "fiware-pep-proxy",
        "helpdesk": "Wilma",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "github": [
            "ging/fiware-pep-proxy"
        ],
        "docker": [
            "fiware/pep-proxy"
        ]
    },
    {
        "enabler": "Wirecloud",
        "catalogue": "application-mashup-wirecloud",
        "academy": "Wirecloud",
        "readthedocs": "wirecloud",
        "helpdesk": "Wirecloud",
        "backlog": "",
        "jira_workitem": "",
        "coverall": "",
        "coverll": "Wirecloud/wirecloud",
        "github": [
            "conwetlab/ngsijs",
            "conwetlab/ngsi-proxy",
            "Wirecloud/wirecloud",
            "Wirecloud/docker-wirecloud"
        ],
        "docker": [
            "Wirecloud/docker-wirecloud"
        ]
    }
]
